<source>
  @type tail
  format json
  time_key time
  path /var/log/containers/*.log
  pos_file /var/log/pos/monitoring-k8s-metrics-dogstats.log.pos
  time_format %Y-%m-%dT%H:%M:%S.%NZ
  tag metric.*
  read_from_head true
</source>

# extract, and parse as json, the 'log' element
<filter metric.**>
  @type parser
  format json
  key_name log
  suppress_parse_error_log true # if it doesn't parse as json, whatever
</filter>

# throw out anything that's not a metric
<filter metric.**>
  @type grep
  regexp1 message metric\.\S+=\S+(\#\{.*\})?
</filter>

# parse the log line. sample: metric.timing.awesome.name=150#{"tagName": "tagValue"}
<filter metric.**>
  @type parser
  key_name message
  format /metric\.(?<type>\w+)\.(?<key>[^=]+)=(?<value>[^\#]+)(?:\#(?<tagsJson>\{.*\}))?/
</filter>

# parse the statsd tags
<filter metric.**>
  @type parser
  format json
  key_name tagsJson
  reserve_data true
  ignore_key_not_exist true
</filter>

# rm the 'tagsJson' key so we don't try to send its value to datadog
<filter metric.**>
  @type record_transformer
  remove_keys tagsJson
</filter>

# send to dog stats
<match metric.**>
  @type dogstatsd
  host dogstatsd.datadog
  flat_tags true
</match>
